library(BiocManager)
BiocManager::install("BiocViews")
BiocManager::install("biocViews")
library(biocViews)
library(tidyverse)
library(dyplr)
library(dplyr)
library(usethis)
use_r("merge_DEG_datasets")
usethis::use_r("plot_DEG_volcano")
usethis::use_r("plot_DEG_heatmap")
usethis::use_r("plot_DEG_barplot")
usethis::use_r("prepare_DEG_heatmap_data")
usethis::use_r("prepare_PCA_data")
usethis::use_r("plot_PCA_tinyarray")
usethis::use_r("GO_enrichment_analysis")
usethis::use_r("plot_TME_barplot")
usethis::use_r("prepare_similarity_data")
usethis::use_r("compute_similarity_matrix")
usethis::use_r("plot_similarity_heatmap")
usethis::use_r("plot_similarity_analysis")
usethis::use_r("plot_TROMscore_boxplot")
usethis::use_r("plot_TROMscore_heatmap")
usethis::use_r("calculate_metabolism_score")
usethis::use_r("plot_metabolism_heatmap")
usethis::use_r("plot_TME_boxplot")
usethis::use_r("batch_TME_boxplot")
usethis::use_package("dplyr")
usethis::use_gpl3_license()
usethis::use_pipe(export = T)
usethis::use_package("IOBR",type = "Imports")
tme <- readRDS("../TME_barplot_result.rds")
library(devtools)
load_all()
?merge_DEG_datasets()
usethis::use_gpl3_license()
# 设定数据主目录（请替换为您的实际路径）
root_dir <- "I:/R/Transcript similarity analysis/home/data1/CrossTx_example_data/"
# 识别三个癌种目录
cancer_dirs <- list.dirs(root_dir, recursive = FALSE, full.names = TRUE)
cancer_dirs
# 读取所有数据为嵌套 list
example_data <- lapply(cancer_dirs, function(cancer_path) {
sub_dirs <- list.dirs(cancer_path, recursive = FALSE, full.names = TRUE)
# 读取每个 GSE 或 TCGA 子目录
model_list <- lapply(sub_dirs, function(model_path) {
files <- list.files(model_path, pattern = "\\.tsv$", full.names = TRUE)
file_list <- lapply(files, function(f) {
read.delim(f, sep = "\t", header = TRUE)
})
# 提取文件名关键词（去掉癌种前缀和 .tsv 后缀）
names(file_list) <- gsub(".*?_(.*)\\.tsv", "\\1", basename(files))
return(file_list)
})
names(model_list) <- basename(sub_dirs)
return(model_list)
})
# 命名外层：癌种名称（去掉数字前缀）
names(example_data) <- gsub("^\\d+\\.", "", basename(cancer_dirs))
example_data
str(example_data)
# 保存为 .rda 文件到 R 包中
usethis::use_data(example_data, overwrite = TRUE)
data("./data/example_data.rda")
data(example_data.rda)
setwd("I:/R/Transcript similarity analysis/home/data1/CrossTx/data")
library(devtools)
load_all()
data("example_data")
str(example_data,max.level = 1)
str(example_data,max.level = 2)
str(example_data,max.level = 3)
setwd("I:/R/Transcript similarity analysis/home/data1/CrossTx")
CrossTx_example_data <- example_data
usethis::use_data(CrossTx_example_data, overwrite = TRUE)
load_all()
data("CrossTx_example_data")
CrossTx_example_data$COAD$TCGA
str(CrossTx_example_data,max.level = 1)
str(CrossTx_example_data,max.level = 2)
use_r("CrossTx_example_data.R")
load_all()
CrossTx::CrossTx_example_data
rm(list = ls())
gc()
library(devtools)
usethis::use_vignette("CrossTx_Workflow")
devtools::build_vignettes()
devtools::build_vignettes()
devtools::document()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::install(build_vignettes = TRUE)
browseVignettes("CrossTx")
browseVignettes("CrossTx")
library(BiocStyle)
?BiocStyle
help(package = "BiocStyle")
library(devtools)
library(BiocManager)
library(biocViews)
BiocManager::install("BiocCheck")
library(BiocCheck)
library(devtools)
load_all()
usethis::use_gpl3_license()
usethis::use_gpl3_license()
devtools::build_vignettes()
